[package]
name = "exvs2_audio_editor"
version = "0.2.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.81"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.31"
eframe = { version = "0.31", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
    "x11",           # To support older Linux distributions (restores one of the default features)
] }
log = "0.4.27"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
serde_json = "1.0"
nus3audio = "1.2.0"
egui-phosphor = "0.9.0"
once_cell = "1.19.0"  # For lazy static initialization
reqwest = { version = "0.11", features = ["json", "blocking"] }
semver = "1.0"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"
rfd = "0.12"  # File dialog
rodio = "0.17.1"  # Audio playback library for native platforms
winapi = { version = "0.3", features = ["winbase"] }  # For Windows-specific process creation flags

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
wasm-bindgen = "0.2.87"
js-sys = "0.3.64"
web-sys = { version = "0.3.70", features = [
    "AudioContext",
    "AudioDestinationNode",
    "AudioNode",
    "AudioBuffer",
    "AudioBufferSourceNode",
    "Document",
    "Element", 
    "HtmlElement", 
    "Window",
    "console"
] }            # to access the DOM and Web Audio API

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
